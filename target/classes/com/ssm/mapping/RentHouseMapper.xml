<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.RentHouseMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.RentHouse">
    <id column="house_id" jdbcType="INTEGER" property="house_id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="community" jdbcType="VARCHAR" property="community" />
    <result column="building" jdbcType="VARCHAR" property="building" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="elevator" jdbcType="INTEGER" property="elevator" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="deposit" jdbcType="INTEGER" property="deposit" />
    <result column="payment_of_rent" jdbcType="VARCHAR" property="payment_of_rent" />
    <result column="rent" jdbcType="INTEGER" property="rent" />
    <result column="registration_time" jdbcType="DATE" property="registration_time" />
    <result column="modification_time" jdbcType="DATE" property="modification_time" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    house_id, username, country, province, city, district, community, building, unit, 
    no, type, area, floor, elevator, title, description, deposit, payment_of_rent, rent, 
    registration_time, modification_time, state
  </sql>
  <select id="selectByExample" parameterType="com.ssm.pojo.RentHouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Rent_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Rent_house
    where house_id = #{house_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Rent_house
    where house_id = #{house_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.RentHouseExample">
    delete from Rent_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.RentHouse" useGeneratedKeys="true" keyProperty="house_id">
    insert into Rent_house (house_id, username, country, 
      province, city, district, 
      community, building, unit, 
      no, type, area, floor, 
      elevator, title, description, 
      deposit, payment_of_rent, rent, 
      registration_time, modification_time, state
      )
    values (#{house_id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{community,jdbcType=VARCHAR}, #{building,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{no,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, #{floor,jdbcType=INTEGER}, 
      #{elevator,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{deposit,jdbcType=INTEGER}, #{payment_of_rent,jdbcType=VARCHAR}, #{rent,jdbcType=INTEGER}, 
      #{registration_time,jdbcType=DATE}, #{modification_time,jdbcType=DATE}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.RentHouse">
    insert into Rent_house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="house_id != null">
        house_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="community != null">
        community,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="elevator != null">
        elevator,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="payment_of_rent != null">
        payment_of_rent,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="registration_time != null">
        registration_time,
      </if>
      <if test="modification_time != null">
        modification_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="house_id != null">
        #{house_id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        #{community,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="elevator != null">
        #{elevator,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=INTEGER},
      </if>
      <if test="payment_of_rent != null">
        #{payment_of_rent,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=INTEGER},
      </if>
      <if test="registration_time != null">
        #{registration_time,jdbcType=DATE},
      </if>
      <if test="modification_time != null">
        #{modification_time,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.RentHouseExample" resultType="java.lang.Long">
    select count(*) from Rent_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Rent_house
    <set>
      <if test="record.house_id != null">
        house_id = #{record.house_id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.community != null">
        community = #{record.community,jdbcType=VARCHAR},
      </if>
      <if test="record.building != null">
        building = #{record.building,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=INTEGER},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.elevator != null">
        elevator = #{record.elevator,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=INTEGER},
      </if>
      <if test="record.payment_of_rent != null">
        payment_of_rent = #{record.payment_of_rent,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=INTEGER},
      </if>
      <if test="record.registration_time != null">
        registration_time = #{record.registration_time,jdbcType=DATE},
      </if>
      <if test="record.modification_time != null">
        modification_time = #{record.modification_time,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Rent_house
    set house_id = #{record.house_id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      community = #{record.community,jdbcType=VARCHAR},
      building = #{record.building,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=INTEGER},
      floor = #{record.floor,jdbcType=INTEGER},
      elevator = #{record.elevator,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      deposit = #{record.deposit,jdbcType=INTEGER},
      payment_of_rent = #{record.payment_of_rent,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=INTEGER},
      registration_time = #{record.registration_time,jdbcType=DATE},
      modification_time = #{record.modification_time,jdbcType=DATE},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.RentHouse">
    update Rent_house
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        community = #{community,jdbcType=VARCHAR},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="elevator != null">
        elevator = #{elevator,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="payment_of_rent != null">
        payment_of_rent = #{payment_of_rent,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=INTEGER},
      </if>
      <if test="registration_time != null">
        registration_time = #{registration_time,jdbcType=DATE},
      </if>
      <if test="modification_time != null">
        modification_time = #{modification_time,jdbcType=DATE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where house_id = #{house_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.RentHouse">
    update Rent_house
    set username = #{username,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      community = #{community,jdbcType=VARCHAR},
      building = #{building,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      floor = #{floor,jdbcType=INTEGER},
      elevator = #{elevator,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      deposit = #{deposit,jdbcType=INTEGER},
      payment_of_rent = #{payment_of_rent,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=INTEGER},
      registration_time = #{registration_time,jdbcType=DATE},
      modification_time = #{modification_time,jdbcType=DATE},
      state = #{state,jdbcType=VARCHAR}
    where house_id = #{house_id,jdbcType=INTEGER}
  </update>
</mapper>